/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package colasdeespera;

import java.awt.Color;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.JOptionPane;

/**
 *
 * @author 
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null); // VENTENA EN CENTRO DE LA PANTALLA
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        clientesAtendidosLabel = new javax.swing.JLabel();
        clientesEsperaLabel = new javax.swing.JLabel();
        contAtendidosL = new javax.swing.JLabel();
        contEsperaL = new javax.swing.JLabel();
        panelCajero = new javax.swing.JPanel();
        cajeroLabel = new javax.swing.JLabel();
        ocupadoLabel = new javax.swing.JLabel();
        tiempoL = new javax.swing.JLabel();
        contiempo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador de Colas de Espera de un Banco");

        titulo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        titulo.setText("Banco");

        clientesAtendidosLabel.setText("Clientes atendidos: ");

        clientesEsperaLabel.setText("Clientes en espera: ");

        contAtendidosL.setText("0");

        contEsperaL.setText("0");

        panelCajero.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cajeroLabel.setText("Cajero");

        ocupadoLabel.setText("Disponible");

        javax.swing.GroupLayout panelCajeroLayout = new javax.swing.GroupLayout(panelCajero);
        panelCajero.setLayout(panelCajeroLayout);
        panelCajeroLayout.setHorizontalGroup(
            panelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCajeroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ocupadoLabel)
                .addContainerGap())
            .addGroup(panelCajeroLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(cajeroLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCajeroLayout.setVerticalGroup(
            panelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCajeroLayout.createSequentialGroup()
                .addComponent(cajeroLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ocupadoLabel)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        tiempoL.setText("Tiempo Trancurrido en Minutos: ");

        contiempo.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(titulo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clientesEsperaLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contEsperaL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clientesAtendidosLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contAtendidosL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(panelCajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tiempoL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelCajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientesAtendidosLabel)
                            .addComponent(contAtendidosL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientesEsperaLabel)
                            .addComponent(contEsperaL))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tiempoL)
                    .addComponent(contiempo))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void simulacion(int ciclos) throws InterruptedException // Arroja excepcion ya que paramos momentaneamente el programa
    {
        // contadores de clientes totales, atendidos, en espera
        int clientes =0;
        int clientesAten = 0;
        int clientesEsp = 0;
        boolean cajero = false; // bandera de cajero si es false esta disponible
        int numero = 0; // numero que le asignaremos valor aleatorio
        
        Queue<Integer> cola=new LinkedList(); // cola de enteros para simular la cola de clientes
        
        // Por defecto se ponen en las Label valores de 0 y que el cajero esta desocupado
        this.contAtendidosL.setText(String.valueOf(clientesAten));
        this.contEsperaL.setText(String.valueOf(clientesEsp));
        this.ocupadoLabel.setText("Disponible");
        this.panelCajero.setBackground(Color.green);
        
        // Ciclo de n iteraciones que se pregunto antes
         for(int i = 0; i<ciclos ;i++)
         {
             
             if(cajero) // si el cajero esta ocupado
             {
                 // Se pinta el panel del rojo y se muestra que esta ocupado
                this.panelCajero.setBackground(Color.red); 
                this.ocupadoLabel.setText("Ocupado");
              
                //DESCOMENAR LA LINEA DE ABAJO SI SE QUIERE VER UN POCO LAS LENTO
                //Thread.sleep(1000); // Dormimos el programa un segundo para notar los cambios de mejor forma
             }
             if(!cajero) // si el cajero esta desocupado
             {
                 // se pinta el panel de verde y se muestra como disponible
                 this.panelCajero.setBackground(Color.green);
                 this.ocupadoLabel.setText("Disponible");
                 
                 //DESCOMENAR LA LINEA DE ABAJO SI SE QUIERE VER UN POCO LAS LENTO
                 //Thread.sleep(1000); // Dormimos el programa un segundo para notar los cambios de mejor forma
             }
            numero = (int) (Math.random() * 6) + 1; // numero aleatorio del 1 al 6
            if(numero<=6 && numero>=4) // si numero esta entre 4 y 6 incluyendolos
            {
                clientes++; // aumenta el contador de clientes
                clientesEsp++; // aumenta el contador de clientes en espera
                cola.add(1); // Se agrega a la cola de clientes 
                this.contEsperaL.setText(String.valueOf(clientesEsp)); // se actualiza el contador de clientes en espera en la pantalla
                
                Thread.sleep(1000); // Dormimos el programa un segundo para notar los cambios de mejor forma
            }
            
            // si cajero esta disponible y la cola de clientes no esta vacia
            if(cajero == false && cola.isEmpty() == false) 
            {
                int c = cola.remove(); // se desencola (simula atender) un cliente 
                clientesEsp--; // contador de clientes en espera decrementa
                clientesAten++; // aumenta el contador de clientes atendidos
                // se actualizan el contador de clientes en espera y atendidos en la pantalla
                this.contAtendidosL.setText(String.valueOf(clientesAten)); 
                this.contEsperaL.setText(String.valueOf(clientesEsp));
                // Pasamos el cajero a ocupado por defecto
                cajero = !cajero;
                // Se pinta el panel del rojo y se muestra que esta ocupado
                this.panelCajero.setBackground(Color.red); 
                this.ocupadoLabel.setText("Ocupado");
                
                Thread.sleep(1000); // // Dormimos el programa un segundo para notar los cambios de mejor forma
                
            }
            // Si numero esta entre 1 y 3 incluyendolos
            if(numero<=3 && numero>=1)
            {
                cajero = !cajero;  // Cambia el valor de cajero (si es true se vuelve false y vicerversa)
            }
            
            this.contiempo.setText(String.valueOf(i+1)); // Se muestra en pantalla en la etiqueta de cntador de minutos el tiempo que ha transcurrido
         }
         // Muestra la info de los clientes atentidos, sin atender etc.
         JOptionPane.showMessageDialog(null,"Clientes Totales: " + clientes + "\nClientes Atendidos: " + clientesAten + "\nClientes Sin Atender: " + clientesEsp + "\nMinutos Trancurridos: " + ciclos);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cajeroLabel;
    private javax.swing.JLabel clientesAtendidosLabel;
    private javax.swing.JLabel clientesEsperaLabel;
    private javax.swing.JLabel contAtendidosL;
    private javax.swing.JLabel contEsperaL;
    private javax.swing.JLabel contiempo;
    private javax.swing.JLabel ocupadoLabel;
    private javax.swing.JPanel panelCajero;
    private javax.swing.JLabel tiempoL;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
